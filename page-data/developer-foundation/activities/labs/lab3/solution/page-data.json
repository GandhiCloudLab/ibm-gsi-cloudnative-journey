{"componentChunkName":"component---src-pages-developer-foundation-activities-labs-lab-3-solution-mdx","path":"/developer-foundation/activities/labs/lab3/solution/","result":{"pageContext":{"frontmatter":{"title":"Kubernetes Lab 3 - Manage Multiple Containers"},"relativePagePath":"/developer-foundation/activities/labs/lab3/solution.mdx","titleType":"page","MdxNode":{"id":"31710897-576c-57d5-b883-600a39e987d9","children":[],"parent":"24c2ed54-5734-5104-bdb9-af4f7bec08b8","internal":{"content":"---\ntitle: Kubernetes Lab 3 - Manage Multiple Containers\n---\n\n## Solution\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vader-service-ambassador-config\ndata:\n  haproxy.cfg: |-\n    global\n        daemon\n        maxconn 256\n\n    defaults\n        mode http\n        timeout connect 5000ms\n        timeout client 50000ms\n        timeout server 50000ms\n\n    listen http-in\n        bind *:80\n        server server1 127.0.0.1:8775 maxconn 32\n```\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: vader-service\nspec:\n  containers:\n  - name: millennium-falcon\n    image: ibmcase/millennium-falcon:1\n  - name: haproxy-ambassador\n    image: haproxy:1.7\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: config-volume\n      mountPath: /usr/local/etc/haproxy\n  volumes:\n  - name: config-volume\n    configMap:\n      name: vader-service-ambassador-config\n``` \n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\nspec:\n  containers:\n  - name: myapp-container\n    image: radial/busyboxplus:curl\n    command: ['sh', '-c', 'while true; do sleep 3600; done']\n```\n\n```bash\nkubectl exec busybox -- curl $(kubectl get pod vader-service -o=jsonpath='{.status.podIP}'):80\n```\n","type":"Mdx","contentDigest":"391a5c704d7e5b86ef9b591fe6e339bc","counter":851,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Kubernetes Lab 3 - Manage Multiple Containers"},"exports":{},"rawBody":"---\ntitle: Kubernetes Lab 3 - Manage Multiple Containers\n---\n\n## Solution\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vader-service-ambassador-config\ndata:\n  haproxy.cfg: |-\n    global\n        daemon\n        maxconn 256\n\n    defaults\n        mode http\n        timeout connect 5000ms\n        timeout client 50000ms\n        timeout server 50000ms\n\n    listen http-in\n        bind *:80\n        server server1 127.0.0.1:8775 maxconn 32\n```\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: vader-service\nspec:\n  containers:\n  - name: millennium-falcon\n    image: ibmcase/millennium-falcon:1\n  - name: haproxy-ambassador\n    image: haproxy:1.7\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: config-volume\n      mountPath: /usr/local/etc/haproxy\n  volumes:\n  - name: config-volume\n    configMap:\n      name: vader-service-ambassador-config\n``` \n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\nspec:\n  containers:\n  - name: myapp-container\n    image: radial/busyboxplus:curl\n    command: ['sh', '-c', 'while true; do sleep 3600; done']\n```\n\n```bash\nkubectl exec busybox -- curl $(kubectl get pod vader-service -o=jsonpath='{.status.podIP}'):80\n```\n","fileAbsolutePath":"/Users/admin/Documents/ISL/Code/GSI-Labs/publish/ibm-gsi-cloudnative-journey/src/pages/developer-foundation/activities/labs/lab3/solution.mdx"}}}}