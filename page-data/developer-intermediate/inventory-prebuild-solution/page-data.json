{"componentChunkName":"component---src-pages-developer-intermediate-inventory-prebuild-solution-index-mdx","path":"/developer-intermediate/inventory-prebuild-solution/","result":{"pageContext":{"frontmatter":{"title":"Inventory - Prebuild Solution"},"relativePagePath":"/developer-intermediate/inventory-prebuild-solution/index.mdx","titleType":"page","MdxNode":{"id":"7939402b-d701-5fdf-8e5a-989b18834178","children":[],"parent":"5062991b-585d-5ea4-8516-5033a86873b9","internal":{"content":"---\ntitle: Inventory - Prebuild Solution\n---\n\n### Prebuilt Solution\n\nIf you want to skip the guide and just get the components running, see [Deploy the Inventory App solution](#deploy-the-inventory-app-solution).\n\n\n## Deploy the Inventory App solution\n\nIf you were unable to get everything working, you can deploy the Inventory App solution. \n\n\n### Inventory Services\n\n- Create a new project from the [Inventory Management Service solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-svc-solution/generate)\nnamed `inventory-management-svc-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute the following\n\n    ```\n    oc sync dev-{your initials} --dev\n    ```\n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-java-gradle-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n### Inventory BFF\n\n- Create a new project from the [Inventory Management BFF solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-bff-solution/generate)\nnamed `inventory-management-bff-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute `oc sync` command. if you are not executed previously. \n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-nodejs-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n- Get the backend service name this value by executing the command `oc get svc -n dev-{initials}.\n    ```\n    $ oc get svc -n dev-ar    \n    NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\n    inventory-bff-ar   ClusterIP   172.21.180.68   <none>        80/TCP    14m\n    inventory-svc-ar   ClusterIP   172.21.4.95     <none>        80/TCP    20m\n    ```\n\n- Update the `connectsTo` value in `charts/base/values.yaml` to point to the kubernetes\nservice of the microservice: `connectsTo: inventory-svc-ar`\n\n\n- Commit and push the changes\n    ```bash\n    git add .\n    git commit -m \"Update the connectsTo\"\n    git push\n    ```\n\n### Inventory UI\n\n- Create a new project from the [Inventory Management UI solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-ui-solution/generate)\nnamed `inventory-management-ui-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute `oc sync` command. if you are not executed previously. \n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-nodejs-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n- Get the bff service name this value by executing the command `oc get svc -n dev-{initials}.\n    ```\n    $ oc get svc -n dev-ar    \n    NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\n    inventory-bff-ar   ClusterIP   172.21.180.68   <none>        80/TCP    14m\n    inventory-svc-ar   ClusterIP   172.21.4.95     <none>        80/TCP    20m\n    ```\n\n- Update the `connectsTo` value in `charts/base/values.yaml` to point to the kubernetes\nservice of the microservice: `connectsTo: inventory-bff-ar`\n\n- Commit and push the changes\n    ```bash\n    git add .\n    git commit -m \"Update the connectTo\"\n    git push\n    ```\n\n- Verify that the application is running\n","type":"Mdx","contentDigest":"248a9dbbd9c506ef3272e440d0fc22ad","counter":900,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Inventory - Prebuild Solution"},"exports":{},"rawBody":"---\ntitle: Inventory - Prebuild Solution\n---\n\n### Prebuilt Solution\n\nIf you want to skip the guide and just get the components running, see [Deploy the Inventory App solution](#deploy-the-inventory-app-solution).\n\n\n## Deploy the Inventory App solution\n\nIf you were unable to get everything working, you can deploy the Inventory App solution. \n\n\n### Inventory Services\n\n- Create a new project from the [Inventory Management Service solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-svc-solution/generate)\nnamed `inventory-management-svc-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute the following\n\n    ```\n    oc sync dev-{your initials} --dev\n    ```\n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-java-gradle-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n### Inventory BFF\n\n- Create a new project from the [Inventory Management BFF solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-bff-solution/generate)\nnamed `inventory-management-bff-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute `oc sync` command. if you are not executed previously. \n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-nodejs-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n- Get the backend service name this value by executing the command `oc get svc -n dev-{initials}.\n    ```\n    $ oc get svc -n dev-ar    \n    NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\n    inventory-bff-ar   ClusterIP   172.21.180.68   <none>        80/TCP    14m\n    inventory-svc-ar   ClusterIP   172.21.4.95     <none>        80/TCP    20m\n    ```\n\n- Update the `connectsTo` value in `charts/base/values.yaml` to point to the kubernetes\nservice of the microservice: `connectsTo: inventory-svc-ar`\n\n\n- Commit and push the changes\n    ```bash\n    git add .\n    git commit -m \"Update the connectsTo\"\n    git push\n    ```\n\n### Inventory UI\n\n- Create a new project from the [Inventory Management UI solution template](https://github.com/ibm-gsi-ecosystem/inventory-management-ui-solution/generate)\nnamed `inventory-management-ui-solution`\n\n- Clone the repository to your local machine\n\n- Go into the repository directory cloned and execute `oc sync` command. if you are not executed previously. \n\n- Register the pipeline [register the pipeline](/developer-intermediate/deploy-app#register-the-app-in-a-devops-pipeline)\n\n    ```\n    oc pipeline --tekton\n    ```\n\n   replacing `{your initials}` with your actual initials\n\n- Execution of the above command. Give git credentials if prompted, and master as the git branch to use. When prompted for the pipeline, select `igc-nodejs-v1-2-0`.\n\n- Open the [pipeline to see it running](/developer-intermediate/deploy-app#9.-view-your-application-pipeline)\n\n- Get the bff service name this value by executing the command `oc get svc -n dev-{initials}.\n    ```\n    $ oc get svc -n dev-ar    \n    NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\n    inventory-bff-ar   ClusterIP   172.21.180.68   <none>        80/TCP    14m\n    inventory-svc-ar   ClusterIP   172.21.4.95     <none>        80/TCP    20m\n    ```\n\n- Update the `connectsTo` value in `charts/base/values.yaml` to point to the kubernetes\nservice of the microservice: `connectsTo: inventory-bff-ar`\n\n- Commit and push the changes\n    ```bash\n    git add .\n    git commit -m \"Update the connectTo\"\n    git push\n    ```\n\n- Verify that the application is running\n","fileAbsolutePath":"/Users/admin/Documents/ISL/Code/GSI-Labs/publish/ibm-gsi-cloudnative-journey/src/pages/developer-intermediate/inventory-prebuild-solution/index.mdx"}}}}